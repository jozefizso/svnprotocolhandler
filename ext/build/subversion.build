<?xml version="1.0"?>
<project name="subversion" default="build" basedir="..\subversion">

  <!-- ====================================================================== -->
  <!-- Project targets                                                        -->
  <!-- ====================================================================== -->
  <target name="rebuild" depends="clean,build" />

  <target name="clean">
    <description>
      Cleans previous built files.
    </description>

    <if test="${cleanup == 'yes'}">
      <delete>
        <fileset>
          <include name="${configuration}_${platform}\**" />
        </fileset>
      </delete>
    </if>
  </target>

  <target name="build" depends="clean">
    <mkdir dir="${configuration}_${platform}" />
    <copy file="subversion\svn_private_config.hw" tofile="subversion\svn_private_config.h" overwrite="true" />
    <loadfile file="subversion\svn_private_config.hw" property="configfile">
      <filterchain>
        <replacestring from="#define SVN_LIBSVN_FS_LINKS_FS_FS" to="/* #define SVN_LIBSVN_FS_LINKS_FS_FS */" />
        <replacestring from="#define SVN_LIBSVN_CLIENT_LINKS_RA_LOCAL" to="/* #define SVN_LIBSVN_CLIENT_LINKS_RA_LOCAL */" />
      </filterchain>
    </loadfile>
    <echo file="subversion\svn_private_config.h" message="${configfile}" />

    <exec program="python.exe">
      <arg value="build\transform_sql.py" />
      <arg value="subversion\libsvn_fs_fs\rep-cache-db.sql" />
      <arg value="subversion\libsvn_fs_fs\rep-cache-db.h" />
    </exec>
    <exec program="python.exe">
      <arg value="build\transform_sql.py" />
      <arg value="subversion\libsvn_wc\wc-metadata.sql" />
      <arg value="subversion\libsvn_wc\wc-metadata.h" />
    </exec>
    <exec program="python.exe">
      <arg value="build\transform_sql.py" />
      <arg value="subversion\libsvn_wc\wc-checks.sql" />
      <arg value="subversion\libsvn_wc\wc-checks.h" />
    </exec>
    <exec program="python.exe">
      <arg value="build\transform_sql.py" />
      <arg value="subversion\libsvn_wc\wc-queries.sql" />
      <arg value="subversion\libsvn_wc\wc-queries.h" />
    </exec>
    <exec program="python.exe">
      <arg value="build\transform_sql.py" />
      <arg value="subversion\libsvn_subr\internal_statements.sql" />
      <arg value="subversion\libsvn_subr\internal_statements.h" />
    </exec>

    <foreach item="Folder" property="foldername">
      <in>
        <items>
          <include name="subversion\libsvn*" />
          <!-- <exclude name="subversion\libsvn_fs_base" /> -->
          <exclude name="subversion\libsvn_ra_local" />
          <exclude name="subversion\libsvn_ra_neon" />
          <exclude name="subversion\libsvn_ra_serf" />
          <exclude name="subversion\libsvn_fs*" />
          <exclude name="subversion\libsvn_auth_gnome_keyring" />
          <exclude name="subversion\libsvn_auth_kwallet" />
        </items>
      </in>
      <do>
        <property name="fname" value="${path::get-file-name(foldername)}" />
        <property name="soname" value="${path::change-extension(fname, 'so')}" />
        <property name="libname" value="${path::change-extension(fname, 'lib')}" />
        <mkdir dir="${configuration}_${platform}\${fname}" />
        <cl outputdir="${configuration}_${platform}\${fname}">
          <arg value="/O2" if="${configuration == 'release'}" />
          <arg value="/Od" if="${configuration == 'debug'}" />
          <arg value="/EHsc" />
          <arg value="/MT" if="${configuration == 'release'}" />
          <arg value="/MTd" if="${configuration == 'debug'}" />
          <arg value="/Gy" />
          <arg value="/W0" />
          <arg value="/nologo" />
          <arg value="/c" />
          <arg value="/Zi" />
          <arg value="/MP" />
          <arg value="/GL" if="${configuration == 'release'}" />
          <arg value="/arch:IA32" if="${configuration == 'release' and platform == 'win32'}" />
          <sources>
            <include name="subversion\${fname}\**.c" />
            <exclude name="subversion\libsvn_subr\win32_crash**.c" />
          </sources>
          <includedirs>
            <include name="subversion" />
            <include name="subversion\include" />
            <include name="subversion\${fname}" />
            <include name="..\apr\include" />
            <include name="..\apr-util\include" />
            <include name="..\apr-util\xml\expat\lib" />
            <include name="..\zlib" />
            <include name="..\cyrus-sasl\include" />
            <include name="..\sqlite" />
          </includedirs>
          <defines>
            <define name="APR_DECLARE_STATIC" />
            <define name="APU_DECLARE_STATIC" />
            <define name="SVN_DEBUG" if="${configuration == 'debug'}" />
            <define name="SVN_HAVE_SASL=1" />
            <define name="APR_HAVE_IPV6" />
            <define name="alloca=_alloca" />
            <define name="WIN32" />
            <define name="_WINDOWS" />
            <define name="_WIN32" />
            <define name="_WIN32_WINNT" value="0x0600" />
            <define name="WIN64" if="${platform == 'x64'}" />
            <define name="NDEBUG" if="${configuration == 'release'}" />
            <define name="_DEBUG" if="${configuration == 'debug'}" />
            <define name="XML_STATIC" />
            <define name="PSAPI_VERSION=1" />
          </defines>
        </cl>
        <property name="machineoption" value="/MACHINE:X86" if="${platform == 'win32'}" />
        <property name="machineoption" value="/MACHINE:X64" if="${platform == 'x64'}" />
        <lib
          output="${configuration}_${platform}\${fname}.lib"
          options='/NOLOGO ${subsystem} ${machineoption}'>
          <arg value="Psapi.lib" if="${fname == 'libsvn_subr'}" />
          <arg value="Version.lib" if="${fname == 'libsvn_subr'}" />
          <arg value="/LTCG" if="${configuration == 'release'}" />
          <sources>
            <include name="${configuration}_${platform}\${fname}\**.obj" />
            <include name="..\zlib\${configuration}_${platform}\zlibstat.lib" if="${fname == 'libsvn_subr'}" />
          </sources>
        </lib>
      </do>
    </foreach>
  </target>

</project>
