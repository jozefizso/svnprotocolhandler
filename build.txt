/**
\page build Build instructions

\section Introduction Introduction
Compiling SVNProtocolHandler is not very difficult, but it requires several steps
to finish, at least the first time.

Unlike other big open source projects, once you have built all the libraries
SVNProtocolHandler depends on, you can use the familiar VisualStudio IDE to build
and debug the binaries. No need to run the build script for every little change.

So don't give up if you read through the next section and all the requirements.
You only have to do this once.

\section Requirements Requirements

\subsection Requirements1 First, you need to install the compiler package.

-# You need VS2013 to allow building of the full SVNProtocolHandler package.
   If you want to build the msi make sure the "Tools for Redistributing
   Applications" are installed.
-# If you plan to build 64 bit packages, install the package
   - "Language Tools" -> "Visual C++" -> "X64 Compilers and Tools"
     available in the VS.NET2008 Professional and higher.
     This will provide you with a cross-compiler and a suitable
     command shell. On XP64, there will also be a native compiler.
-# \b Optional but recommended: Install Microsoft SDK for Windows Vista (February 2007 Update)
   - http://www.microsoft.com/downloads/details.aspx?FamilyID=FF6467E6-5BBA-4BF5-B562-9199BE864D29 .
     Make sure you install the x64 compiler, header and libraries if you want to build in x64.
   - Open "Microsoft Windows SDK", "Visual Studio Registration", "Integrate Windows SDK with Visual Studio 2008"
     to make sure Visual Studio uses the latest SDK headers and libraries.
-# \b Optional: Install the MSDN Library (documentation) from
   http://www.microsoft.com/downloads/details.aspx?familyid=B8704100-0127-4D88-9B5D-896B9B388313
   You can always access it online at http://msdn2.microsoft.com/en-us/Library

\subsection Requirements2 Next you need to install some utilities/programs.
- TortoiseSVN                   http://tortoisesvn.net
- WiX 3.8(\b 1)                 http://wixtoolset.org/
- NAnt 0.92(\b 1)               http://nant.sourceforge.net

(\b 1) Add the paths of the binaries to the PATH environment variable. You may have to
    logoff/logon to make the new environment variables take effect!


\section Preparations Preparations

Now you're almost ready. Only a few more steps to do:
- create a new folder on your harddisk, e.g. SVN.
- Checkout the SVNProtocolHandler sources from the Subversion repository into
  SVN\SVNProtocolHandler
- Make a copy of the file default.build.user.tmpl in the SVNProtocolHandler root folder and
  rename that copy to default.build.user. Then adjust the paths as mentioned
  in that file.

\section build32 Building 32 bit packages

  Hint: before you can start building TortoiseSVN, you need to call the vsvars32.bat
  file which is located in \%VS120COMNTOOLS%.

  Now, you can run the build script to compile SVNProtocolHandler.

\verbatim
  > nant
\endverbatim
  will show you some help about the targets you can use

\verbatim
  > nant setup
\endverbatim
  will compile everything and create the msi installer

  If you encounter any build errors, you can run nant again like this:
\verbatim
  > nant setup -l:buildlog.txt
\endverbatim
  which will create a build log file which you can use to analyse where
  exactly the build failed.

\section Debugging Debugging

When debugging, make sure that the debug dll is properly registered.
You can call
\verbatim
 > regsvr32 /i path/to/dll
\endverbatim
to register the dll manually.

On pre-Vista OS, you can simply start the debugger with the iexplore.exe.
On vista however, the IE spawns a child process ieuser.exe which runs
with lower privileges and does the real work. That means you have to
configure your debugger to attach to the iexplorer.exe process, run it
and then attach to the ieuser.exe process. Then you can set breakpoints
in the dll code.

*/
